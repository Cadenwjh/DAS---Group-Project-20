chisq.test(data$intake, data$duration)$p.value,
chisq.test(data$outcome, data$duration)$p.value,
chisq.test(data$chip, data$duration)$p.value
)
)
knitr::kable(pvalues)
replace3 <- function(data, variable, category) {
Q1 <- quantile(data[[variable]][data$chip == category], 0.25)
Q3 <- quantile(data[[variable]][data$chip == category], 0.75)
IQR <- Q3 - Q1
upper <- Q3 + 1.5 * IQR
out <- which(data$chip == category & data[[variable]] > upper)
med <- median(data[[variable]][data$chip == category])
data[[variable]][out] <- med
return(data)
}
categories <- unique(data$chip)
for(cat in categories) {
data <- replace3(data, 'duration', cat)
}
model <- lm(duration~., data = data)
knitr::kable(vif(model))
data <- subset(data, select = -month)
data <- subset(data, select = -year)
glm_poisson <- glm(duration~., family = "poisson", data = data)
summary(glm_poisson)
tab = function(df, var1, var2){
CrossTable(df[, var1], df[, var2],
prop.r = T,
prop.c = F,
prop.t = F,
prop.chisq = F,
dnn = c(var1, var2))
}
data <- read.csv('dataset20.csv', stringsAsFactors = FALSE)
sum(is.na(data))
colnames(data) <- c('type', 'month', 'year', 'intake', 'outcome', 'chip', 'duration')
#| label: tbl-desc
#| tbl-cap: 'Description of the Dataset'
desc_var <- c('The type of animal admitted to the shelter',
'Month the animal was admitted',
'Year the animal was admitted',
'Reason for the animal being admitted',
'Final outcome for the admitted animal',
'Did the animal have a microchip with owner information',
'Days spent at the shelter between being admitted and the final outcome')
tbl <- cbind(colnames(data), desc_var)
colnames(tbl) <- c('Variable', 'Description')
knitr::kable(tbl)
char_vars <- sapply(data, is.character)
data[char_vars] <- lapply(data[char_vars], function(x) {
factor(x)
})
str(data)
#| label: fig-duration
#| fig-cap: distribution of duration
ggplot(data, aes(x=duration)) +
geom_histogram(binwidth=1, fill='blue', color='black')
Q1 <- quantile(data$duration, 0.25)
Q3 <- quantile(data$duration, 0.75)
IQR <- Q3 - Q1
upper <- Q3 + 1.5 * IQR
out <- which(data$duration > upper)
med <- median(data$duration)
data$duration[out] <- med
ggplot(data, aes(x=month,y=duration, group=month))+
geom_boxplot(aes(fill=month))
ggplot(data, aes(x=year,y=duration, group=year))+
geom_boxplot(aes(fill=year))
#| label: tbl-type
#| tbl-cap: 'type of animals'
knitr::kable(prop.table(table(data$type)))
data <- data %>%
filter(!(type == "BIRD" | type == "WILDLIFE")) %>%
droplevels()
#| label: fig-intake
#| fig-cap: distribution of intake
ggplot(data, aes(y=duration, x=intake, group=intake))+
geom_boxplot(aes(fill=intake))+
theme(legend.position = "none")
replace <- function(data, variable, category) {
Q1 <- quantile(data[[variable]][data$intake==category], 0.25)
Q3 <- quantile(data[[variable]][data$intake==category], 0.75)
IQR <- Q3 - Q1
upper <- Q3 + 1.5 * IQR
out <- which(data$intake==category & data[[variable]] > upper)
med <- median(data[[variable]][data$intake==category])
data[[variable]][out] <- med
return(data)
}
categories <- unique(data$intake)
for(cat in categories) {
data <- replace(data, 'duration', cat)
}
#| label: fig-outcome
#| fig-cap: distribution of outcome
ggplot(data, aes(y=duration, x=outcome, group=outcome))+
geom_boxplot(aes(fill=outcome))+
theme(legend.position = "none")
replace2 <- function(data, variable, category) {
Q1 <- quantile(data[[variable]][data$outcome == category], 0.25)
Q3 <- quantile(data[[variable]][data$outcome == category], 0.75)
IQR <- Q3 - Q1
upper <- Q3 + 1.5 * IQR
out <- which(data$outcome == category & data[[variable]] > upper)
med <- median(data[[variable]][data$outcome == category])
data[[variable]][out] <- med
return(data)
}
categories <- unique(data$outcome)
for(cat in categories) {
data <- replace2(data, 'duration', cat)
}
#| label: fig-chip
#| fig-cap: distribution of chip
ggplot(data, aes(y=duration, x=chip, group=chip))+
geom_boxplot(aes(fill=chip))+
theme(legend.position = "none")
replace3 <- function(data, variable, category) {
Q1 <- quantile(data[[variable]][data$chip == category], 0.25)
Q3 <- quantile(data[[variable]][data$chip == category], 0.75)
IQR <- Q3 - Q1
upper <- Q3 + 1.5 * IQR
out <- which(data$chip == category & data[[variable]] > upper)
med <- median(data[[variable]][data$chip == category])
data[[variable]][out] <- med
return(data)
}
categories <- unique(data$chip)
for(cat in categories) {
data <- replace3(data, 'duration', cat)
}
pvalues <- data.frame(
Variable = c("type", "intake", "outcome", "chip"),
P_Value = c(
chisq.test(data$type, data$duration)$p.value,
chisq.test(data$intake, data$duration)$p.value,
chisq.test(data$outcome, data$duration)$p.value,
chisq.test(data$chip, data$duration)$p.value
)
)
knitr::kable(pvalues)
model <- lm(duration~., data = data)
knitr::kable(vif(model))
data <- subset(data, select = -month)
data <- subset(data, select = -year)
glm_poisson <- glm(duration~., family = "poisson", data = data)
summary(glm_poisson)
model <- lm(duration~., data = data)
knitr::kable(vif(model))
# Full model including 'month' and 'year'
full_model <- glm.nb(duration ~ type + month + year + intake + outcome + chip, data = dataset)
# Full model including 'month' and 'year'
full_model <- glm.nb(duration ~ type + month + year + intake + outcome + chip, data = data)
data <- read.csv('dataset20.csv', stringsAsFactors = FALSE)
sum(is.na(data))
colnames(data) <- c('type', 'month', 'year', 'intake', 'outcome', 'chip', 'duration')
#| label: tbl-desc
#| tbl-cap: 'Description of the Dataset'
desc_var <- c('The type of animal admitted to the shelter',
'Month the animal was admitted',
'Year the animal was admitted',
'Reason for the animal being admitted',
'Final outcome for the admitted animal',
'Did the animal have a microchip with owner information',
'Days spent at the shelter between being admitted and the final outcome')
tbl <- cbind(colnames(data), desc_var)
colnames(tbl) <- c('Variable', 'Description')
knitr::kable(tbl)
# Full model including 'month' and 'year'
full_model <- glm.nb(duration ~ type + month + year + intake + outcome + chip, data = data)
# Reduced model excluding 'month' and 'year'
reduced_model <- glm.nb(duration ~ type + intake + outcome + chip, data = data)
# Full model including 'month' and 'year'
full_model <- glm.nb(duration ~ type + month + year + intake + outcome + chip, data = data)
summary(full_model)
# Reduced model excluding 'month' and 'year'
reduced_model <- glm.nb(duration ~ type + intake + outcome + chip, data = data)
summary(reduced_model)
glm_nb_optimal <- stepAIC(glm_nb, direction = "backward")
dispersiontest(glm_poisson)
# 2.584389
glm_nb_optimal <- stepAIC(glm_nb, direction = "backward")
glm_nb <- glm.nb(duration~., data = data)
summary(glm_nb)
glm_nb_optimal <- stepAIC(glm_nb, direction = "backward")
glm_poisson_optimal <- stepAIC(glm_poisson, direction = "backward")
model <- lm(duration~., data = data)
knitr::kable(vif(model))
pvalues <- data.frame(
Variable = c("type", "intake", "outcome", "chip"),
P_Value = c(
chisq.test(data$type, data$duration)$p.value,
chisq.test(data$intake, data$duration)$p.value,
chisq.test(data$outcome, data$duration)$p.value,
chisq.test(data$chip, data$duration)$p.value
)
)
knitr::kable(pvalues)
data <- read.csv('dataset20.csv', stringsAsFactors = FALSE)
sum(is.na(data))
colnames(data) <- c('type', 'month', 'year', 'intake', 'outcome', 'chip', 'duration')
#| label: tbl-desc
#| tbl-cap: 'Description of the Dataset'
desc_var <- c('The type of animal admitted to the shelter',
'Month the animal was admitted',
'Year the animal was admitted',
'Reason for the animal being admitted',
'Final outcome for the admitted animal',
'Did the animal have a microchip with owner information',
'Days spent at the shelter between being admitted and the final outcome')
tbl <- cbind(colnames(data), desc_var)
colnames(tbl) <- c('Variable', 'Description')
knitr::kable(tbl)
data <- subset(data, select = -month)
data <- subset(data, select = -year)
glm_poisson <- glm(duration~., family = "poisson", data = data)
summary(glm_poisson)
dispersiontest(glm_poisson)
# 2.584389
glm_nb <- glm.nb(duration~., data = data)
summary(glm_nb)
glm_nb <- glm.nb(duration~., data = data)
summary(glm_nb)
glm_nb_optimal <- stepAIC(glm_nb, direction = "backward")
data <- subset(data, select = -month)
# Full model including 'month' and 'year'
full_model <- glm.nb(duration ~ type + month + year + intake + outcome + chip, data = data)
data <- read.csv('dataset20.csv', stringsAsFactors = FALSE)
sum(is.na(data))
colnames(data) <- c('type', 'month', 'year', 'intake', 'outcome', 'chip', 'duration')
#| label: tbl-desc
#| tbl-cap: 'Description of the Dataset'
desc_var <- c('The type of animal admitted to the shelter',
'Month the animal was admitted',
'Year the animal was admitted',
'Reason for the animal being admitted',
'Final outcome for the admitted animal',
'Did the animal have a microchip with owner information',
'Days spent at the shelter between being admitted and the final outcome')
tbl <- cbind(colnames(data), desc_var)
colnames(tbl) <- c('Variable', 'Description')
knitr::kable(tbl)
char_vars <- sapply(data, is.character)
data[char_vars] <- lapply(data[char_vars], function(x) {
factor(x)
})
str(data)
#| label: fig-duration
#| fig-cap: Distribution of the Duration Variable
ggplot(data, aes(x=duration)) +
geom_histogram(binwidth=1, fill='blue', color='black')
Q1 <- quantile(data$duration, 0.25)
Q3 <- quantile(data$duration, 0.75)
IQR <- Q3 - Q1
upper <- Q3 + 1.5 * IQR
out <- which(data$duration > upper)
med <- median(data$duration)
data$duration[out] <- med
#| label: fig-duration
#| fig-cap: distribution of duration
ggplot(data, aes(x=month,y=duration, group=month))+
geom_boxplot(aes(fill=month))
ggplot(data, aes(x=year,y=duration, group=year))+
geom_boxplot(aes(fill=year))
#| label: tbl-type
#| tbl-cap: 'type of animals'
knitr::kable(prop.table(table(data$type)))
data <- data %>%
filter(!(type == "BIRD" | type == "WILDLIFE")) %>%
droplevels()
#| label: fig-intake
#| fig-cap: distribution of intake
ggplot(data, aes(y=duration, x=intake, group=intake))+
geom_boxplot(aes(fill=intake))+
theme(legend.position = "none")
replace <- function(data, variable, category) {
Q1 <- quantile(data[[variable]][data$intake==category], 0.25)
Q3 <- quantile(data[[variable]][data$intake==category], 0.75)
IQR <- Q3 - Q1
upper <- Q3 + 1.5 * IQR
out <- which(data$intake==category & data[[variable]] > upper)
med <- median(data[[variable]][data$intake==category])
data[[variable]][out] <- med
return(data)
}
categories <- unique(data$intake)
for(cat in categories) {
data <- replace(data, 'duration', cat)
}
#| label: fig-outcome
#| fig-cap: distribution of outcome
ggplot(data, aes(y=duration, x=outcome, group=outcome))+
geom_boxplot(aes(fill=outcome))+
theme(legend.position = "none")
replace2 <- function(data, variable, category) {
Q1 <- quantile(data[[variable]][data$outcome == category], 0.25)
Q3 <- quantile(data[[variable]][data$outcome == category], 0.75)
IQR <- Q3 - Q1
upper <- Q3 + 1.5 * IQR
out <- which(data$outcome == category & data[[variable]] > upper)
med <- median(data[[variable]][data$outcome == category])
data[[variable]][out] <- med
return(data)
}
categories <- unique(data$outcome)
for(cat in categories) {
data <- replace2(data, 'duration', cat)
}
#| label: fig-chip
#| fig-cap: distribution of chip
ggplot(data, aes(y=duration, x=chip, group=chip))+
geom_boxplot(aes(fill=chip))+
theme(legend.position = "none")
replace3 <- function(data, variable, category) {
Q1 <- quantile(data[[variable]][data$chip == category], 0.25)
Q3 <- quantile(data[[variable]][data$chip == category], 0.75)
IQR <- Q3 - Q1
upper <- Q3 + 1.5 * IQR
out <- which(data$chip == category & data[[variable]] > upper)
med <- median(data[[variable]][data$chip == category])
data[[variable]][out] <- med
return(data)
}
categories <- unique(data$chip)
for(cat in categories) {
data <- replace3(data, 'duration', cat)
}
pvalues <- data.frame(
Variable = c("type", "intake", "outcome", "chip"),
P_Value = c(
chisq.test(data$type, data$duration)$p.value,
chisq.test(data$intake, data$duration)$p.value,
chisq.test(data$outcome, data$duration)$p.value,
chisq.test(data$chip, data$duration)$p.value
)
)
knitr::kable(pvalues)
model <- lm(duration~., data = data)
knitr::kable(vif(model))
# Full model including 'month' and 'year'
full_model <- glm.nb(duration ~ type + month + year + intake + outcome + chip, data = data)
summary(full_model)
# Reduced model excluding 'month' and 'year'
reduced_model <- glm.nb(duration ~ type + intake + outcome + chip, data = data)
summary(reduced_model)
dispersiontest(glm_poisson)
# 2.584389
#| fig-cap: Residuals vs Fitted Values
#| label: fig-residanalysis1
#| fig-align: center
#| fig-width: 4
#| fig-height: 3
plot(glm_poisson$fitted.values, residuals(glm_poisson, type = "deviance"),
xlab = "Fitted Values", ylab = "Deviance Residuals", pch = 20)
#| fig-cap: Scale-Location
#| label: fig-residanalysis2
#| fig-align: center
#| fig-width: 4
#| fig-height: 3
plot(glm_poisson$fitted.values, sqrt(abs(residuals(glm_poisson, type = "pearson"))), xlab = "Fitted Values", ylab = "√|Standardized Pearson Residuals|")
#| fig-cap: Residuals vs Leverage
#| label: fig-residanalysis3
#| fig-align: center
#| fig-width: 4
#| fig-height: 3
plot(hatvalues(glm_poisson), residuals(glm_poisson, type = "pearson"), xlab = "Leverage", ylab = "Pearson Residuals")
glm_nb <- glm.nb(duration~., data = data)
summary(glm_nb)
data <- subset(data, select = -month)
data <- subset(data, select = -year)
glm_nb <- glm.nb(duration~., data = data)
summary(glm_nb)
glm_nb_optimal <- stepAIC(glm_nb, direction = "backward")
glm_poisson_optimal <- stepAIC(glm_poisson, direction = "backward")
Q1 <- quantile(data$duration, 0.25)
Q3 <- quantile(data$duration, 0.75)
IQR <- Q3 - Q1
upper <- Q3 + 1.5 * IQR
out <- which(data$duration > upper)
med <- median(data$duration)
data$duration[out] <- med
#| label: fig-duration
#| fig-cap: distribution of duration
ggplot(data, aes(x=month,y=duration, group=month))+
geom_boxplot(aes(fill=month))
#| label: fig-month-year
#| fig-cap: Distribution of Month and Year vs Duration Variable
ggplot(data, aes(x=month,y=duration, group=month))+
geom_boxplot(aes(fill=month))
#| label: tbl-desc
#| tbl-cap: 'Description of the Dataset'
#| tbl-align: center
desc_var <- c('The type of animal admitted to the shelter',
'Month the animal was admitted',
'Year the animal was admitted',
'Reason for the animal being admitted',
'Final outcome for the admitted animal',
'Did the animal have a microchip with owner information',
'Days spent at the shelter between being admitted and the final outcome')
tbl <- cbind(colnames(data), desc_var)
colnames(tbl) <- c('Variable', 'Description')
knitr::kable(tbl)
#| label: fig-duration
#| fig-cap: Distribution of the Duration Variable
#| fig-align: center
ggplot(data, aes(x=duration)) +
geom_histogram(binwidth=1, fill='blue', color='black')
#| label: tbl-type
#| tbl-cap: 'type of animals'
#| tbl-align: center
knitr::kable(prop.table(table(data$type)))
data <- data %>%
filter(!(type == "BIRD" | type == "WILDLIFE")) %>%
droplevels()
#| label: fig-intake
#| fig-cap: distribution of intake
#| fig-align: center
ggplot(data, aes(y=duration, x=intake, group=intake))+
geom_boxplot(aes(fill=intake))+
theme(legend.position = "none")
#| label: tbl-type
#| tbl-cap: The Distribution of Animal Types
#| tbl-align: center
knitr::kable(prop.table(table(data$type)))
data <- data %>%
filter(!(type == "BIRD" | type == "WILDLIFE")) %>%
droplevels()
#| label: tbl-type
#| tbl-cap: The Distribution of Animal Types
#| tbl-align: center
data <- data %>%
filter(!(type == "BIRD" | type == "WILDLIFE")) %>%
droplevels()
knitr::kable(prop.table(table(data$type)))
#| label: tbl-type
#| tbl-cap: The Distribution of Animal Types
#| tbl-align: center
data <- data %>%
filter(!(type == "BIRD" | type == "WILDLIFE")) %>%
droplevels()
knitr::kable(prop.table(table(data$type)))
#| label: tbl-type
#| tbl-cap: The Distribution of Animal Types
#| tbl-align: center
animal_type_prop <- prop.table(table(data$type))
data <- data %>%
filter(!(type == "BIRD" | type == "WILDLIFE")) %>%
droplevels()
knitr::kable(animal_type_prop)
#| label: tbl-animaltype
#| tbl-cap: The Distribution of Animal Types
#| tbl-align: center
animal_type_prop <- prop.table(table(data$type))
data <- data %>%
filter(!(type == "BIRD" | type == "WILDLIFE")) %>%
droplevels()
knitr::kable(animal_type_prop)
#| label: tbl-animaltype
#| tbl-cap: The Distribution of Animal Types
#| tbl-align: center
animal_type_prop <- prop.table(table(data$type))
data <- data %>%
filter(!(type == "BIRD" | type == "WILDLIFE")) %>%
droplevels()
knitr::kable(animal_type_prop)
glm_nb <- glm.nb(duration~., data = data)
summary(glm_nb)
#| label: fig-intake
#| fig-cap: The Distribution of the Intake Variable
#| fig-align: center
ggplot(data, aes(y=duration, x=intake, group=intake))+
geom_boxplot(aes(fill=intake))+
theme(legend.position = "none")
#| label: fig-outcome
#| fig-cap: The Distribution of the Outcome Variable
#| fig-align: center
ggplot(data, aes(y=duration, x=outcome, group=outcome))+
geom_boxplot(aes(fill=outcome))+
theme(legend.position = "none")
ggplot(data, aes(y = duration, x = outcome, group = outcome)) +
geom_boxplot(aes(fill = outcome)) +
theme_minimal() +  # For a clean background
theme(
legend.position = "none",
axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate labels
plot.margin = margin(5.5, 20, 5.5, 5.5, "pt")  # Adjust margins if needed
)
ggplot(data, aes(y=duration, x=outcome, group=outcome))+
geom_boxplot(aes(fill=outcome))+
theme(legend.position = "none")
ggplot(data, aes(y = duration, x = outcome, group = outcome)) +
geom_boxplot(aes(fill = outcome)) +
theme_minimal() +  # For a clean background
theme(
legend.position = "none",
axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate labels
plot.margin = margin(5.5, 20, 5.5, 5.5, "pt")  # Adjust margins if needed
)
#| label: fig-outcome
#| fig-cap: The Distribution of the Outcome Variable
#| fig-align: center
ggplot(data, aes(y=duration, x=outcome, group=outcome))+
geom_boxplot(aes(fill=outcome))+
theme(legend.position = "none", axis.text.x = element_text(angle = 45, hjust = 1), plot.margin = margin(5.5, 20, 5.5, 5.5, "pt"))
#| label: fig-chip
#| fig-cap: The Distribution of Chip Variable
ggplot(data, aes(y=duration, x=chip, group=chip))+
geom_boxplot(aes(fill=chip))+
theme(legend.position = "none")
# Full model including 'month' and 'year'
full_model <- glm.nb(duration ~ type + month + year + intake + outcome + chip, data = data)
